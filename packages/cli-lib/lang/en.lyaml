en:
  cli:
    commands:
      accounts:
        describe: "Commands for working with accounts."
        subcommands:
          list:
            accounts: "Accounts:"
            defaultAccount: "Default account: {{ account }}"
            describe: "List names of accounts defined in config."
            configPath: "Config path: {{ configPath }}"
            labels:
              accountId: "Account ID"
              authType: "Auth Type"
              name: "Name"
          rename:
            describe: "Rename account in config."
            positionals:
              accountName:
                describe: "Name of account to be renamed."
              newName:
                describe: "New name for account."
            success:
              renamed: "Account \"{{ name }}\" renamed to \"{{ newName }}\""
      app:
        subcommands:
          deploy:
            building: "Building \"{{ appPath }}\" in account {{ accountId }}"
            examples:
              default: "Build and deploy app"
            positionals:
              path:
                describe: "Path to app folder"
            success:
              deployed: "Your app has been built and deployed. Go to {{ appUrl }} to see your app."
      auth:
        describe: "Configure authentication for a HubSpot account. Supported authentication protocols are {{ supportedProtocols }}."
        errors:
          accountNameExists: "Account name \"{{ name }}\" already exists, please enter a different name."
          noConfigFileFound: "No config file was found. To create a new config file, use the \"hs init\" command."
          unsupportedAuthType: "Unsupported auth type: {{ type }}. The only supported authentication protocols are {{ supportedProtocols }}."
        positionals:
          type:
            describe: "Authentication mechanism"
            defaultDescription: "\"{{ authMethod }}\": \nAn access token tied to a specific user account. This is the recommended way of authenticating with local development tools."
        success:
          configFileUpdated: "{{ configFilename }} updated with {{ authMethod }}."
      config:
        describe: "Commands for working with the config file."
        subcommands:
          set:
            describe: "Commands for working with the config file."
            subcommands:
              allowUsageTracking:
                describe: "Enable or disable usage tracking."
                disabled: "Usage tracking is now disabled."
                enabled: "Usage tracking is now enabled."
                examples:
                  default: "Select to enable or disable usage tracking from a list"
                labels:
                  enabled: "Enabled"
                  disabled: "Disabled"
                promptMessage: "Choose to enable or disable usage tracking"
              defaultAccount:
                describe: "Change default account used in config."
                errors:
                  accountNotFound: "The account \"{{ specifiedAccount }}\" was not found in {{ configPath }}."
                examples:
                  default: "Select account to use as the default from a list"
                  idBased: "Set the default account to the account in the config with accountId equal to \"1234567\""
                  nameBased: "Set the default account to the account in the config with name equal to \"MyAccount\""
                positionals:
                  newDefault:
                    describe: "Account name or id to use as the default"
                promptMessage: "Select an account to use as the default"
                success:
                  defaultAccountUpdated: "Default account updated to: \"{{ accountName }}\"."
              defaultMode:
                describe: "Change default mode used in config."
                errors:
                  invalidMode: "The mode \"{{ mode }}\" is invalid. Valid values are {{ validModes }}."
                examples:
                  default: "Select mode to use as the default from a list"
                  draft: "Set the default mode in the config to \"draft\""
                  publish: "Set the default mode in the config to \"publish\""
                positionals:
                  newMode:
                    describe: "Mode to use as the default"
                promptMessage: "Select a mode to use as the default"
                success:
                  modeUpdated: "Default mode updated to: {{ mode }}"
              httpTimeout:
                describe: "Change http timeout used in config."
                examples:
                  default: "Set the http timeout value in the config to 30000ms"
                positionals:
                  timeout:
                    describe: "Set http timeout value (in ms) in the config"
                success:
                  timeoutUpdated: "The http timeout has been set to: {{ timeout }}"
      create:
        describe: "Create HubSpot sample apps and CMS assets. Supported assets are {{ supportedAssetTypes }}."
        errors:
          deprecatedAssetType: "The CLI command for asset type {{ assetType }} has been deprecated in an effort to make it easier to know what asset types can be created. Run the \"{{ newCommand }}\" command instead. Then when prompted select \"{{ type }}\"."
          unsupportedAssetType: "The asset type {{ assetType }} is not supported. Supported asset types are {{ supportedAssetTypes }}."
          unusablePath: "The \"{{ path }}\" is not a usable path to a directory."
        positionals:
          dest:
            describe: "Destination folder for the new asset, relative to your current working directory. If omitted, this argument will default to your current working directory"
          name:
            describe: "Name of new asset"
          type:
            describe: "Type of asset"
        subcommands:
          apiSample:
            errors:
              nameRequired: "The \"name\" argument is required when creating an API Sample."
              noSamples: "Currently there are no samples available, please, try again later."
            info:
              sampleChosen: "You've chosen {{ sampleType }} sample written on {{ sampleLanguage }} language"
            loading:
              apiSamples: "Loading available API samples"
            success:
              sampleCreated: "Please, follow {{ filePath }}/README.md to find out how to run the sample"
          module:
            creatingModule: "Creating module at {{ path }}"
            creatingPath: "Creating {{ path }}"
            errors:
              pathExists: "The {{ path }} path already exists"
              nameRequired: "The \"name\" argument is required when creating a Custom Module."
          project:
            success:
              projectCreated: "Project created in {{ path }}"
          template:
            debug:
              creatingPath: "Making {{ path }} if needed"
            errors:
              nameRequired: "The \"name\" argument is required when creating a Template."
              pathExists: "The {{ path }} path already exists"
            log:
              creatingFile: "Creating file at {{ path }}"
      customObject:
        betaMessage: "The Custom Object CLI is currently in beta and is subject to change."
        describe: "Manage Custom Objects. This feature is currently in beta and the CLI contract is subject to change."
        seeMoreLink: "See {{ link }} to find out more."
        subcommands:
          create:
            describe: "Create custom object instances"
            errors:
              creationFailed: "Object creation from {{ definition }} failed"
            positionals:
              definition:
                describe: "Local path to the JSON file containing an array of object definitions"
              name:
                describe: "Schema name to add the object instance to"
            success:
              objectsCreated: "Objects created"
          schema:
            describe: "Manage custom object schemas"
            subcommands:
              create:
                describe: "Create a custom object schema"
                errors:
                  creationFailed: "Schema creation from {{ definition }} failed"
                positionals:
                  definition:
                    describe: "Local path to the JSON file containing the schema definition"
                success:
                  schemaCreated: "Your schema has been created in account \"{{ accountId }}\""
                  schemaViewable: "Schema can be viewed at {{ url }}"
              delete:
                describe: "Delete a custom object schema"
                error:
                  delete: "Unable to delete {{ name }}"
                examples:
                  default: "Delete \"schemaName\" schema"
                positionals:
                  name:
                    describe: "Name of the target schema"
                success:
                  delete: "Successfully initiated deletion of {{ name }}"
              fetchAll:
                describe: "Fetch all custom object schemas for an account"
                errors:
                  fetch: "Unable to fetch schemas"
                examples:
                  default: "Fetch all schemas for an account and put them in the current working directory"
                  specifyPath: "Fetch all schemas for an account and put them in a directory named my/folder"
                positionals:
                  dest:
                    describe: "Local folder where schemas will be written"
                success:
                  fetch: "Saved schemas to {{ path }}"
              fetch:
                describe: "Fetch a custom object schema"
                errors:
                  fetch: "Unable to fetch {{ name }}"
                examples:
                  default: "Fetch \"schemaId\" schema and put it in the current working directory"
                  specifyPath: "Fetch \"schemaId\" schema and put it in a directory named my/folder"
                positionals:
                  dest:
                    describe: "Local folder where schema will be written"
                  name:
                    describe: "Name of the target schema"
                success:
                  save: "The schema \"{{ name }}\" has been saved to \"{{ path }}\""
                  savedToPath: "Saved schema to {{ path }}"
              list:
                describe: "List schemas available on your account"
                errors:
                  list: "Unable to list schemas"
              update:
                describe: "Update an existing custom object schema"
                errors:
                  update: "Schema update from {{ definition }} failed"
                positionals:
                  definition:
                    describe: "Local path to the JSON file containing the schema definition"
                  name:
                    describe: "Name of the target schema"
                success:
                  update: "Your schema has been updated in account \"{{ accountId }}\""
                  viewAtUrl: "Schema can be viewed at {{ url }}"
        warning: "WARNING"
      fetch:
        describe: "Fetch a file, directory or module from HubSpot and write to a path on your computer."
        errors:
          sourceRequired: "A source to fetch is required."
        options:
          staging:
            describe: "Retrieve staged changes for project"
        positionals:
          dest:
            describe: "Local directory you would like the files to be placed in, relative to your current working directory"
          src:
            describe: "Path in HubSpot Design Tools"
      filemanager:
        describe: "Commands for working with the File Manager."
      functions:
        describe: "Commands for working with functions."
      hubdb:
        describe: "Manage HubDB tables."
      init:
        describe: "Initialize {{ configName }} for a HubSpot account."
        options:
          auth:
            describe: "Specify auth method to use [\"personalaccesskey\", \"oauth2\", \"apikey\"]"
            defaultDescription: "\"{{ defaultType }}\": \nAn access token tied to a specific user account. This is the recommended way of authenticating with local development tools."
        success:
          configFileCreated: "The config file \"{{ configPath }}\" was created using \"{{ authType }}\" for account {{ account }}."
        info:
          updateConfig: "To update an existing config file, use the \"hs auth\" command."
        errors:
          configFileExists: "The config file {{ configPath }} already exists."
      lint:
        issuesFound: "{{ count }} issues found."
        groupName: "Linting {{ path }}"
        positionals:
          path:
            describe: "Local folder to lint"
      list:
        describe: "List remote contents of a directory."
        gettingPathContents: "Getting contents of {{ path }}."
        noFilesFoundAtPath: "No files found in {{ path }}."
        positionals:
          path:
            describe: "Remote directory to list contents"
      logs:
        describe: "Get logs for a function."
        errors:
          noLogsFound: "No logs were found for the function path \"{{ functionPath }}\" in account \"{{ accountId }}\"."
        examples:
          default: "Get 5 most recent logs for function residing at /_hcms/api/my-endpoint"
          follow: "Poll for and output logs for function residing at /_hcms/api/my-endpoint immediately upon new execution"
          limit: "Get 10 most recent logs for function residing at /_hcms/api/my-endpoint"
        gettingLogs: "Getting {{#if latest}}latest {{/if}}logs for function with path: {{ functionPath }}."
        options:
          compact:
            describe: "output compact logs"
          follow:
            describe: "follow logs"
          latest:
            describe: "retrieve most recent log only"
          limit:
            describe: "limit the number of logs to output"
        positionals:
          endpoint: "Serverless function endpoint"
        tailLogs: "Waiting for log entries for \"{{ functionPath }}\" on account \"{{ accountId }}\".\n"
      mv:
        describe: "Move a remote file or folder in HubSpot. This feature is currently in beta and the CLI contract is subject to change."
        errors:
          sourcePathExists: "The folder \"{{ srcPath }}\" already exists in \"{{ destPath }}\"."
          moveFailed: "Moving \"{{ srcPath }}\" to \"{{ destPath }}\" in account {{ accountId }} failed"
        move: "Moved \"{{ srcPath }}\" to \"{{ destPath }}\" in account {{ accountId }}"
      open:
        describe: "Open a HubSpot page in your browser. Run \"hs open list\" to see all available shortcuts."
        options:
          list:
            describe: "List all supported shortcuts"
        positionals:
          shortcut:
            describe: "Shortcut of the link you'd like to open"
        selectLink: "Select a link to open"
      remove:
        describe: "Delete a file or folder from HubSpot."
        deleted: "Deleted \"{{ path }}\" from account {{ accountId }}"
        errors:
          deleteFailed: "Deleting \"{{ path }}\" from account {{ accountId }} failed"
        positionals:
          path:
            describe: "Remote hubspot path"
      secrets:
        describe: "Manage HubSpot secrets."
      server:
        description: "Run the CMS HubL server."
        fetching: "Fetching account data for {{ accountId }} to update context"
        runningServer: "Running: {{ cmd }}"
        startingServer: "Starting HubSpot CMS HubL server"
      theme:
        describe: "Commands for working with themes, including marketplace validation with the marketplace-validate subcommand."
      upload:
        describe: "Upload a folder or file from your computer to the HubSpot CMS."
        errors:
          destinationRequired: "A destination path needs to be passed"
          fileIgnored: "The file \"{{ path }}\" is being ignored via an .hsignore rule"
          invalidExtension: "The file \"{{ path }}\" does not have a valid extension"
          invalidPath: "The path \"{{ path }}\" is not a path to a file or folder"
          uploadFailed: "Uploading file \"{{ src }}\" to \"{{ dest }}\" failed"
        positionals:
          src:
            describe: "Path to the local file, relative to your current working directory."
          dest:
            describe: "Path in HubSpot Design Tools, can be a net new path."
        previewUrl: "To preview this theme, visit: {{ previewUrl }}"
        success:
          fileUploaded: "Uploaded file from \"{{ src }}\" to \"{{ dest }}\" in the Design Manager of account {{ accountId }}"
          uploadComplete: "Uploading files to \"{{ dest }}\" in the Design Manager is complete"
        uploading: "Uploading files from \"{{ src }}\" to \"{{ dest }}\" in the Design Manager of account {{ accountId }}"
      watch:
        describe: "Watch a directory on your computer for changes and upload the changed files to the HubSpot CMS."
        errors:
          destinationRequired: "A destination directory needs to be passed"
          invalidPath: "The \"{{ path }}\" is not a path to a directory"
        options:
          disableInitial: "Disable the initial upload when watching a directory (default)"
          initialUpload: "Upload directory before watching for updates"
          notify: "Log to specified file when a watch task is triggered and after workers have gone idle. Ex. --notify path/to/file"
          remove: "Will cause watch to delete files in your HubSpot account that are not found locally."
        positionals:
          src:
            describe: "Path to the local directory your files are in, relative to your current working directory"
          dest:
            describe: "Path in HubSpot Design Tools. Can be a net new path"
        warnings:
          disableInitial: "Passing the \"--disable-initial\" option is no longer necessary. Running \"hs watch\" no longer uploads the watched directory by default."
          initialUpload: "To upload the directory run \"hs upload\" beforehand or add the \"--initial-upload\" option when running \"hs watch\"."
          notUploaded: "The \"hs watch\" command no longer uploads the watched directory when started. The directory \"{{ path }}\" was not uploaded."


